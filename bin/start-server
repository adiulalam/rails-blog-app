#!/bin/bash -e

# Variables
CONTAINER_NAME="rails-postgres"
POSTGRES_VERSION="15" # Specify the desired PostgreSQL version
POSTGRES_USER="postgres"
POSTGRES_PORT="5432"
VOLUME_NAME="rails-postgres-data"

# Check if the container already exists
if [ "$(docker ps -aq -f name=${CONTAINER_NAME})" ]; then
  echo "Container with the name ${CONTAINER_NAME} already exists. Stopping and removing it."
  docker stop ${CONTAINER_NAME} > /dev/null 2>&1
  docker rm ${CONTAINER_NAME} > /dev/null 2>&1
fi

# Create the volume if it doesn't exist
if [ -z "$(docker volume ls -q -f name=${VOLUME_NAME})" ]; then
  echo "Creating a volume named ${VOLUME_NAME}..."
  docker volume create ${VOLUME_NAME}
fi

# Run PostgreSQL container with restart policy and volume
echo "Creating a PostgreSQL container named ${CONTAINER_NAME}..."
docker run -d \
  --name ${CONTAINER_NAME} \
  --restart=unless-stopped \
  -e POSTGRES_USER=${POSTGRES_USER} \
  -e POSTGRES_HOST_AUTH_METHOD=trust \
  -p ${POSTGRES_PORT}:5432 \
  -v ${VOLUME_NAME}:/var/lib/postgresql/data \
  postgres:${POSTGRES_VERSION}

# Check if the container started successfully
if [ $? -eq 0 ]; then
  echo "PostgreSQL instance created successfully!"
  echo "Connection details:"
  echo "  Host: localhost"
  echo "  Port: ${POSTGRES_PORT}"
  echo "  Username: ${POSTGRES_USER}"
else
  echo "Failed to create the PostgreSQL instance."
  exit 1
fi
